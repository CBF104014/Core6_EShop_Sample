@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
<link href="~/lib/cropper/cropper.min.css" rel="stylesheet" />
<script src="~/lib/cropper/cropper.min.js"></script>

@model Core6_EShop.Dto.GoodsDetailManageDto
<div id="goodsDetailManageContainer">
    <div class="row mb-3">
        <div class="col-md-8">
            <div class="row">
                <div class="col-md-4 mb-3">
                    <label class="form-label">商品編號：(系統取號)</label>
                    <input type="text" class="form-control" v-model="mainData.goodsData.gId" disabled>
                </div>
                <div class="col-md-4 mb-3">
                    <label class="form-label">商品分類：</label>
                    <select class="form-select" name="gType1" v-model="mainData.goodsData.gType1">
                        <option v-for="item in mainData.gType1Option" :key="item.key" :value="item.key">
                            {{ item.value }}
                        </option>
                    </select>
                </div>
                <div class="col-md-4 mb-3">
                    <label class="form-label">售價：</label>
                    <div class="input-group">
                        <span class="input-group-text">$</span>
                        <integer-only class="form-control" name="goodPrice" v-model="mainData.goodsData.goodPrice"></integer-only>
                    </div>
                </div>
                <div class="col-md-12 mb-3">
                    <label class="form-label">商品名稱：</label>
                    <input type="text" class="form-control" name="goodName" v-model="mainData.goodsData.goodName">
                </div>
                <div class="col-md-12 mb-3">
                    <label class="form-label">商品規格：</label>
                    <div class="row">
                        <div class="col-md-12">
                            <button class="btn btn-primary m-1" type="button" v-on:click="addRelation">
                                <i class="bi bi-plus-lg"></i>
                                新增
                            </button>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <input type="hidden" name="goodsSizeDatas" />
                        </div>
                        <div class="col-md-12">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th scope="col">#</th>
                                        <th scope="col">-</th>
                                        <th scope="col">尺寸</th>
                                        <th scope="col">庫存數量</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr v-for="(item, index) in mainData.goodsData.goodsSizeDatas">
                                        <td>{{ index + 1 }}</td>
                                        <td>
                                            <button class="btn btn-danger m-1" type="button" v-on:click="deleteRelation(index)">
                                                <i class="bi bi-trash3"></i>
                                            </button>
                                        </td>
                                        <td>
                                            <select class="form-select" v-bind:name="getName(index,'sizeId')" v-model="item.sizeId" v-on:change="checkSize(index)">
                                                <option v-for="item2 in mainData.goodsSizeOption" :key="item2.key" :value="item2.key">
                                                    {{ item2.value }}
                                                </option>
                                            </select>
                                        </td>
                                        <td class="text-right">
                                            <integer-only class="form-control" v-bind:name="getName(index,'stockNum')" v-model="item.stockNum"></integer-only>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 mb-3">
                    <label class="form-label">商品描述：</label>
                    <textarea class="form-control" name="goodDesc" rows="3" v-model="mainData.goodsData.goodDesc"></textarea>
                </div>
                <div class="col-md-12 mb-3">
                    <label class="form-label">商品狀態：</label>
                    <select class="form-select" name="goodState" v-model="mainData.goodsData.goodState">
                        <option v-for="item in mainData.goodStateOption" :key="item.key" :value="item.key">
                            {{ item.value }}
                        </option>
                    </select>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="row">
                <div class="col-md-12 mb-2">
                    <label class="form-label">商品圖片：</label>
                    <div class="input-group">
                        <input type="file" class="form-control" name="fileData.byteData" v-on:change="fileGetData">
                    </div>
                </div>
                <div class="col-md-12 text-danger mb-2">
                    ※請自行裁切大小
                </div>
                <div class="col-md-12 mb-2">
                    <div class="card bg-light">
                        <img id="CropperImage" :src="imageSrc" style="width:100%;max-height:300px;" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-md-auto">
            <button class="btn btn-primary" type="button" v-on:click="saveDetailData">
                <i class="bi bi-plus-lg"></i>
                確認存檔
            </button>
        </div>
    </div>
</div>

<script>
    $(document).ready(async function () {
        const { createApp, ref } = Vue;
        const selfId = 'goodsDetailManageContainer';
        var cropper = null;
        async function loadData(_modelData = {}) {
            // console.log(_modelData);
            const appMain = createApp({
                components: vueComponent,
                data() {
                    var gType1Option = _modelData.gType1CodeDatas
                        .map(x => new $$kv(x.varValue, x.varNameCH));
                    gType1Option.unshift(new $$kv(0, '請選擇'));
                    var goodStateOption = _modelData.goodStateCodeDatas
                        .map(x => new $$kv(x.varValue, x.varNameCH));
                    var goodsSizeOption = _modelData.goodsSizeCodeDatas
                        .map(x => new $$kv(x.sizeId, x.sizeName));
                    return {
                        mainData: {
                            goodsData: _modelData.goodsViewModelData,
                            goodsRelationSample: _modelData.goodsRelationSample,
                            gType1Option: gType1Option,
                            goodsSizeOption: goodsSizeOption,
                            goodStateOption: goodStateOption,
                        }
                    };
                },
                computed: {
                    imageSrc: function () {
                        if (this.mainData.goodsData.fileData == null)
                            return '';
                        if (this.mainData.goodsData.fileData.byteData == null)
                            return '';
                        return `data:image/${this.mainData.goodsData.fileData.fileType};base64,${this.mainData.goodsData.fileData.byteData}`;
                    }
                },
                watch: {},
                methods: {
                    fileGetData: async function (element) {
                        var rs = await this.mainData.goodsData.fileData.GetFile(element.target.files[0]);
                        // console.log(rs);
                        if (rs != true)
                            return;
                        this.fileCropperLoad();
                    },
                    fileCropperLoad: function () {
                        if (cropper != null)
                            cropper.destroy();
                        cropper = new Cropper(document.getElementById('CropperImage'), {
                            aspectRatio: 1,
                            autoCropArea: 1,
                            viewMode: 1,
                            cropBoxResizable: false,
                            crop(e) { },
                        });
                    },
                    filePreView: function (element) {
                        this.mainData.goodsData.fileData.PreView();
                    },
                    saveDetailData: async function () {
                        if (this.mainData.goodsData.fileData.byteData != null) {
                            var imageBase64 = cropper
                                .getCroppedCanvas()
                                .toDataURL()
                                .split("base64,")[1];
                            this.mainData.goodsData.fileData.byteData = imageBase64;
                        }
                        var resultData = await $$ajaxPromise('/Server/SaveGoods', this.mainData.goodsData);
                        console.log(resultData);
                        if (resultData.state == 1) {
                            $$showMsg(resultData);
                            $$closePanel();
                        } else {
                            $$showValidationResult(selfId, resultData.payload.validateDatas);
                            $$showMsg(resultData);
                        }
                    },
                    getImagePath(_path) {
                        return '/' + _path.replaceAll('\\', '/') + '/thumbnail_s.png';
                    },
                    getName(_index, _name) {
                        return `goodsSizeDatas[${_index}].${_name}`;
                    },
                    checkSize(_index) {
                        // var item = this.mainData.goodsData.goodsSizeDatas[_index];
                        // var findIndex = this.mainData.goodsData.goodsSizeDatas
                        //     .findIndex(x => x.sizeId == item.sizeId);
                        // if (findIndex > -1) {
                        //     $$showMsg({ title: '規格已重複' });
                        // }
                    },
                    addRelation: async function () {
                        if (this.mainData.goodsData.goodsSizeDatas == null)
                            this.mainData.goodsData.goodsSizeDatas = [];
                        var cloneData = $$clone(this.mainData.goodsRelationSample);
                        cloneData.gId = this.mainData.goodsData.gId;
                        this.mainData.goodsData.goodsSizeDatas.push(cloneData);
                    },
                    deleteRelation: async function (_index) {
                        this.mainData.goodsData.goodsSizeDatas.splice(_index, 1);
                    },
                },
                mounted() {
                    this.mainData.goodsData.fileData = new $$fileBase(this.mainData.goodsData.fileData);
                    this.fileCropperLoad();
                }
            });
            appMain.mount('#' + selfId);
        }
        await loadData(@Json.Serialize(@Model));
    });
</script>