@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

<div id="goodsManageContainer">
    <div class="row">
        <div class="col-md-12 mb-2">
            <button type="button" class="btn btn-primary m-1" v-on:click="reloadTable">
                <i class="bi bi-arrow-clockwise"></i>
                重整
            </button>
            <button type="button" class="btn btn-primary m-1" v-on:click="addGoods">
                <i class="bi bi-plus-lg"></i>
                新增
            </button>
            <button type="button" class="btn btn-primary m-1" v-on:click="editGoods">
                <i class="bi bi-pencil-square"></i>
                編輯
            </button>
            <button type="button" class="btn btn-danger m-1" v-on:click="deleteGoods">
                <i class="bi bi-trash3"></i>
                刪除
            </button>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-md-12" style="overflow:auto;">
            <table id="goodsTable" class="table table-bordered table-hover" style="width:100%">
            </table>
        </div>
    </div>
</div>

@section scripts{
    <script>
        $(document).ready(async function () {
            const { createApp, ref } = Vue;
            const selfId = 'goodsManageContainer';
            var dts = new $$dataTables('/Server/GetGoodsGrid', 'goodsTable');
            async function loadData(_modelData = {}) {
                const appMain = createApp({
                    components: vueComponent,
                    data() { return {}; },
                    computed: {},
                    watch: {},
                    methods: {
                        reloadTable: async function () {
                            dts.reloadAll();
                        },
                        addGoods: async function () {
                            await $$openPanel('/Server/LoadGoodsDetailManageModal', {
                                modalTitle: '新增商品',
                                gId: 0
                            });
                            dts.reloadAll();
                        },
                        editGoods: async function () {
                            var selData = dts.getSelectedRowData();
                            if (selData == null) {
                                $$showMsg({ title: '請選擇任一筆資料' });
                                return;
                            }
                            await $$openPanel('/Server/LoadGoodsDetailManageModal', {
                                modalTitle: '編輯商品',
                                gId: selData.gId,
                            });
                            dts.reloadAll();
                        },
                        deleteGoods: async function () {
                            var selData = dts.getSelectedRowData();
                            if (selData == null) {
                                $$showMsg({ title: '請選擇任一筆資料' });
                                return;
                            }
                            var msgResult = await $$showMsg({
                                title: `確定刪除商品編號${selData.gId}?`,
                                icon: 'question',
                                showCancelButton: true,
                            });
                            if (msgResult.isConfirmed != true)
                                return;
                            var delResult = await $$ajaxPromise('/Server/DeleteGoods', { gId: selData.gId }, 'GET');
                            if (delResult.state == 1) {
                                dts.reloadAll();
                            }
                        },
                        initDataTable: async function () {
                            dts.tableRowId = 'gId';
                            dts.onSelected = async (_selectDatas) => { };
                            dts.tableColumns = [
                                { data: 'gId', title: '商品編號', width: '15%', className: 'text-start' },
                                {
                                    data: 'imagePath', title: '商品圖片', width: '10%', className: 'text-center', render: (data, type, row) => {
                                        var path = '/' + data.replaceAll('\\', '/') + '/thumbnail_s.png?t=' + new Date().getTime();
                                        return `<img src="${path}" class="card-img-top" alt="..." loading="lazy" style="width:50px;" />`;
                                    }
                                },
                                { data: 'gType1', title: '商品種類', width: '10%', className: 'text-start' },
                                { data: 'goodName', title: '商品名稱', width: '50%', className: 'text-start' },
                                { data: 'goodPrice', title: '商品價錢', width: '15%', className: 'text-end', render: (data, type, row) => { return '$' + $$toCurrency(data); } },
                                { data: 'goodState', title: '狀態', width: '5%', className: 'text-end', render: (data, type, row) => { return data; } },
                            ];
                            await dts.loadTable();
                        },
                    },
                    mounted() {
                        this.initDataTable();
                    }
                });
                appMain.mount('#' + selfId);
            };
            await loadData();
        });
    </script>
}